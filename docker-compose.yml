version: '3.8'

services:
  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: examtech-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    networks:
      - examtech-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: examtech-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb+srv://punitmnitjaipur:ECHZ46jTQUxUI3B9@prod.ppegomw.mongodb.net/examtech?retryWrites=true&w=majority&appName=prod
      - JWT_SECRET=${JWT_SECRET:-examtech-super-secret-jwt-key-change-in-production-2024}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - LOG_LEVEL=info
      - LOG_FILE_PATH=/app/logs
      - ENABLE_HEALTH_CHECKS=true
      - ENABLE_METRICS=true
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - AUTH_RATE_LIMIT_MAX_REQUESTS=5
      - MAX_FILE_SIZE=5242880
      - UPLOAD_PATH=/app/uploads
      - ENABLE_PROCTORING=true
      - PROCTORING_STRICT_MODE=false
      - MAX_SUSPICIOUS_SCORE=80
      - MONGODB_CONNECTION_POOL_SIZE=10
      - MONGODB_SOCKET_TIMEOUT_MS=45000
      - MONGODB_SERVER_SELECTION_TIMEOUT_MS=30000
      # Firebase Admin SDK Configuration
      - FIREBASE_PRIVATE_KEY_ID=68a5e1c6e159a5aa2cb7914c716b86776901bee7
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY:-"-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDmM2CjHQ9iq5H5\nV+ZrPtCw+7HDlt4z10wQ557XBabg+XOcqrkQ4z5XetdO7ZAtzXpJpD+4e/6KVm+E\nF2BLQJ40yt2rkJeGS6jltepbvfmbzMjZWuFGvxeNgmGf+ODnPfHs2ET15eH6VHSE\nyLRtN442adS0IZJ5SAS6gFmh1/n0wmUzg2JVAYRkEVEfVkIwZdU9+e2dqCMDgZ67\nqhL0Y8ESyjmyEnX9c3d7gBQWVFVUdn9zsed2xzwn4Ohsru9fu7dMpCWIguy50cbr\nSW/o+AqcieDlnCnj2WZyTTKXQ6q5z1xnKabbgNLuldqEiMXZDjMTJjXsYRRDFQGJ\ncJWLnRSDAgMBAAECggEAJbFl8m9wtHxZY5WUAh1/+GrOGbObYKuxJdd3N8gSIiZW\nWuHNeclrzNEtbhwSDp3llydQ07lh3W73xY46Uzgab5SEJXKAjRnYZvyZijoaI/ut\nK4Ho/zeM+LvPlm0fDl4jPd/Pst/YV6/6gD+I45VEMP61OGWC4V78fzlC8/A0WnIm\npyYedm9xowdxEU+wh9qCDQrxJVgrpQsQNyt3i9ACQbInN95BE4Ff4VIBG71GiQ/g\niOYPGf/iBGtjecUfU0GLzlt+JWfup8q/M0TQ1qzf2fpkLG59441/XhU97xA77E6o\nlb1qthEgHgWo+sYUeihMOo4YpyIsb8L3GvkbX3MJaQKBgQD8Q7BauZGRj9zMO/E3\nl5n1cvQeDbL2KIPKAnAoOOaJYJbSegJurl1+8A2I8YbH7hkxMFWO9L6jS8WqhdDP\nQNI0HkVrwHupVkmNDnEvywoVuet14degH1EoUFmYtKFLb3mICPQTVGArE02pgwS7\n5jg5VhQ+MxL3oWaH1NvcVyQjNwKBgQDpnAwOG07uEf2Zmexz1kvpiX139LHOSOE4\nprix8roGcLS6sOgMCcXmimaInwI4WEFzjjsdOV5Dlz97U9odiQb5JuVbjVcn6cLL\nAL9wAh7A7hyW4+2D7AE+Kp7jPE4vLvt3FMGZ1pKEPGG3qdG7dM8w8fOR7J+vqIri\noEY6hAXXFQKBgD11xF6mPXgIY9QCeqd/sQvi4OT9k29zuYAbDfZOvqQTu0s2XKdY\npgDKPZHyvlKxiMO6Me4tZNDmIheEmLYV5eC6y1EQSVCdbDgIn7z0K9XVQS+sQVuK\npbw7r0iMIYv+cc6Z19VpxjBYeKBnAl1BHsuhVDc/PEzGrvNDAfnx5SULAoGAZ/MC\nAjzwkEr9F55AcwMGYHLHm9sMS4huf3Dgen5RfJAmO3SArOqkXwNywJRQvpW2+h5t\n+4ENivIAU3Zqdf4FVlSSdnycLax8+yvoA4VN/fd2TUY66BraKrl4XhD1kVVMnB5m\nT3gFVkYwDTPJmapOj675/RLXs6hBtLowxdT9bEkCgYBJqfVkk3iTroU5l1IxgjLi\nJ+TzgQXMgUBTIrkByVGXS0YC550RCuAxB7Jwui5cnnHuUdA8JF1pnFiTS52+qUyT\nKDHq9EDTRif4HaRft5UmjSTzBgXPTDGwJ9WSQeBrqWDzOobtac/S9hF+ibeVuWbU\ndqLZNVkhZGoPsnGliJwmQg==\n-----END PRIVATE KEY-----\n"}
      - FIREBASE_CLIENT_EMAIL=firebase-adminsdk-fbsvc@prepexam-59b8f.iam.gserviceaccount.com
      - FIREBASE_CLIENT_ID=105091485518245622559
      - FIREBASE_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40prepexam-59b8f.iam.gserviceaccount.com
    ports:
      - "3001:3001"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs/backend:/app/logs
    networks:
      - examtech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: examtech-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:3001}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL:-http://backend:3001}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-ExamTech}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      - NEXT_PUBLIC_ENABLE_PROCTORING=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=true
      - NEXT_PUBLIC_ENABLE_REAL_TIME=true
      - NEXT_PUBLIC_ENABLE_HTTPS_ONLY=true
      - NEXT_PUBLIC_CONTENT_SECURITY_POLICY=true
      - NEXT_PUBLIC_ENABLE_CACHING=true
      - NEXT_PUBLIC_ENABLE_COMPRESSION=true
      # Firebase Configuration (Public)
      - NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyCeQmi_mSX82uK1ogUyJBQQZNnGp2uxgDE
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=prepexam-59b8f.firebaseapp.com
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=prepexam-59b8f
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=prepexam-59b8f.firebasestorage.app
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=276771591390
      - NEXT_PUBLIC_FIREBASE_APP_ID=1:276771591390:web:a5323787d7821a6ad61e4f
      - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=G-XRH22M5CKC
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./logs/frontend:/app/logs
    networks:
      - examtech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: examtech-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - examtech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: examtech-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - examtech-network

  # Grafana for visualization (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: examtech-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - examtech-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  examtech-network:
    driver: bridge 